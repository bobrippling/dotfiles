# vim: ft=tmux

# rename-window to newname                   ^b , <newname> OR ^b :rename-window <newname>             ^a A <newname>
# list windows in chooseable menu            ^a "
# see keybindings                            ^b ?                                                      ^a ?
# list sessions                              ^b s OR tmux ls OR tmux list-sessions                     screen -ls
# split pane horizontally                    ^b "
# split pane vertically                      ^b %
# switch to another pane                     ^b o
# close other panes except the current one   ^b !
# swap location of panes                     ^b ^o
# show pane numbers                          ^b q
# swap layout                                ^b <space>

# attach to current session, like screen -x:
# $ tmux new -t 0

# bind to ^A, since ^B is vim's scroll up
set -g prefix ^a
unbind C-b
bind a send-prefix

# replace default of "screen"
set -g default-terminal "tmux-256color"

# By default, tmux only accepts cursor shape changes if the outer
# terminal is xterm (or a derivative)
# Override this:
set -ga terminal-overrides   ",rxvt*:Ss=\e[%p1%d q:Se=\e[2 q"
set -ga terminal-overrides ",screen*:Ss=\e[%p1%d q:Se=\e[2 q"
set -ga terminal-overrides   ",tmux*:Ss=\e[%p1%d q:Se=\e[2 q"

# --------------------------------------------------------------
# binds

# screen like stuff
bind ^c new-window
bind ^a last-window
bind ^d detach

# more intuitive keybindings for splitting
unbind %
unbind '"'
bind - split-window -v
bind | split-window -h

# layouts:
# even-horizontal
# even-vertical
# main-horizontal
# main-vertical
bind C-v select-layout main-vertical
bind M-v select-layout even-vertical
bind C-h select-layout main-horizontal
bind M-h select-layout even-horizontal
bind t select-layout tiled

# ^a o is cycle windows
bind @   next-layout
bind m setw monitor-activity
#bind | pipe-pane -o 'exec cat >> /tmp/tmux_#S:#I:#P'
# string interpolates:
# #(shell-command)  First line of the command's output
# #[attributes]     Colour or attribute change
# #H                Hostname of local host
# #F                Current window flag
# #I                Current window index
# #P                Current pane index
# #S                Session name
# #T                Current window title
# #W                Current window name
# ##                A literal ‘#’

# toggle statusbar
bind w set status

bind A setw automatic-rename on

bind l lock-client

# open a man page in new window
#bind / command-prompt "split-window 'exec man %%'"
bind / command-prompt "find-window '%%'"
bind S command-prompt -p "swap window for:" "swap-window -t '%%'"
bind J command-prompt -p "join pane from:"  "join-pane -t '%%'"
#bind M command-prompt -p "man page for:"    "new-window 'man %% || read'"
bind M command-prompt -p "move to:"    "move-window -t '%%'"
bind C command-prompt -p "new window command:" "new-window '%1'"

#bind = choose-buffer

# reload config without killing server
bind r source-file ~/.tmux.conf

# pane commands
# use below as generic target pane argument

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind < resize-pane -L 10
bind > resize-pane -R 10
bind _ resize-pane -U 10
bind + resize-pane -D 10

bind o rotate-window
bind Enter swap-pane -s 0
bind p previous-window
bind n next-window # redundant

# confirm before killing a window or the server
bind K choose-window "kill-window -t %%"
bind D choose-client
bind t choose-tree -N
unbind s
bind s choose-tree -Ns

# don't update any environment variables implicitly
set -g update-environment ""

# --------------------------------------------------------------
# sets
set  -g status-keys vi
setw -g mode-keys vi

#set -sg default-path "."

set -s escape-time 0

#set-window-option -g window-status-current-style bright,reverse,bg=cyan,fg=black
#bind -n F1 run-shell 'mpc toggle >/dev/null 2>&1'

# Statusbar properties.
set -g display-time 500 # display notifications for x seconds
set -g status-style fg=cyan

# misc settings
set  -g lock-command vlock
setw -g clock-mode-colour red
#setw -g mouse off <-- default

# statusbar
set -g status-interval 30
set -g status-justify centre
set -g status-left-length 0
set -g status-right-length 16

#set -g status-right "#(uptime|awk '{print $11}'|sed 's/,//') #(date +%H:%M)"
set -g status-right "#H %H:%M" # %d-%b-%y

# colours:
# black, red, green, yellow, blue, magenta, cyan, white, colour[0..255]
# attributes: bright/bold, dim, underscore, blink, reverse, hidden, italics

# default window title colors
setw -g window-status-style fg=green,dim

# active window title colors
setw -g window-status-current-style fg=cyan,bold

# command/message line colors
set -g message-style fg=white,dim

# pane colors
set -g pane-border-style fg=blue

set -g pane-active-border-style fg=green
