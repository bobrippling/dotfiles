# see global ignore file @ ~/.config/git/ignore

[user]
	name = Rob Pilling
	email = robpilling@gmail.com
	useConfigOnly = true

[core]
	commitGraph = true

[alias]
	adp = add -p
	adu = add -u
	amend = commit --amend
	c-p = cherry-pick
	ci = commit
	co = checkout
	sw = switch
	di = diff --ws-error-highlight=all
	dic = diff --cached
	ff = merge --ff-only
	lg = log --oneline
	lgg = log --oneline --graph
	rbc = rebase --con
	rbi = rebase -i
	t = status -sb
	fe = fetch -p
	smu = submodule update
	logf = log --format=fuller --date=iso-strict
	apply-strip = "!f(){ git di -- \"$@\" | git apply --cached --whitespace=strip; }; f"
	where = rev-parse --show-prefix
	br = "!f(){ git branch \"$@\" | cut -c3- | sed '/HEAD -> /d'; }; f"
	co-menu = "!f(){ _b=$(git br \"$@\" | tmenu); if test -n \"$_b\"; then git co \"$_b\"; else return 1; fi; }; f"

	# skip-worktree - don't touch a file ever (modulo conflicts) and don't let it affect `git status`
	# assume-unchanged - don't stat a file. this is reset on index changes to said file
	wt-ignore = update-index --skip-worktree
	wt-unignore = update-index --no-skip-worktree
	wt-ignore-show = "!git ls-files -v | grep '^S'"

# i/o
[interactive]
	singlekey = true
[advice]
	pushUpdateRejected = false
	pushNonFFCurrent = false
	pushNonFFDefault = false
	pushNonFFMatching = false
	pushAlreadyExists = false
	pushFetchFirst = false
	pushNeedsForce = false
	statusHints = false
	commitBeforeMerge = false
	resolveConflict = false
	detachedHead = false
[color]
	ui = true
[color "diff"]
	# for a light tty:
	oldmoved = yellow
	newmoved = blue
[gui]
	displayUntracked = false

# behaviour
[rerere]
	enabled = true

# commands
[rebase]
	autosquash = true
	#updaterefs = true
[pull]
	ff = only
[push]
	# push to @{u}, provided current branch name matches
	default = simple
[merge]
	defaultToUpstream = true
	tool = vimdiff
	#conflictstyle = diff3
[fetch]
	writeCommitGraph = true
[diff]
	renames = copies
	mnemonicprefix = true
	# Color moved blocks as moves instead of additions + deletions
	colormoved = default
	# Ignore indentation changes when detecting moved blocks
	colormovedws = allow-indentation-change
[submodule]
	recurse = true
[blame]
	# Disabled by default - must exist, so should be repo-local setting
	#ignoreRevsFile = .git-blame-ignore-revs
	markIgnoredLines = true
	markUnblamableLines = true

# replacements
[url "https://github.com/"]
	insteadOf	= http://github.com/
	insteadOf	= git://github.com/
[url "https://bitbucket.com/"]
	insteadOf	= http://bitbucket.com/
	insteadOf	= git://bitbucket.com/
[url "https://git.suckless.org/"]
	insteadOf	= http://git.suckless.org/
	insteadOf	= git://git.suckless.org/

[remotes]
	cloud = github-me bitbucket
