#pcm.!default {
#	type plug
#	slave { pcm "dmix" }
#}
##ctl.!default {
#	#type plug
#	#slave { pcm "dmix" }
##}
#
#pcm.plugequal{
#	type equal
#  # Modify the line below if you don't
#  # want to use sound card 0.
#  #slave.pcm "plughw:0,0";
#  # or if you want to use with multiple applications output to dmix
#	slave.pcm "plug:dmix"
#	#slave.pcm "plug:jack"
#}
#ctl.equal{
#	type equal;
#}
#pcm.equal{
#	type plug;
#	slave.pcm "plug:dmix";
#}
#pcm.dmixout {
#	# for skype
#	type plug
#	slave { pcm "dmix" };
#}
#



## ----------------------- file capture
#
#pcm.!default {
#	type plug;
#
#	slave {
#		pcm rate48000Hz # to the below converter
#	}
#}
#
#pcm.rate48000Hz {
#	type rate
#	slave {
#		pcm writeFile # to the plugin
#		format S16_LE
#		#channels 2
#		rate 48000
#	}
#	#route_policy copy
#}
#
#pcm.writeFile {
#	type file
#	slave {
#		pcm card0 # write to sound card ... ?
#	}
#	file "aplay-yo.raw"
#	format "wav"
#}
#
#pcm.card0 {
#	type hw
#	card 0
#}
#
#ctl.card0 {
#	type hw
#	card 0
#}


## ----------------------- per-env outputs
# http://leahneukirchen.org/dotfiles/.asoundrc

# define three additional softvol channels, to be selected
# via "ALSA_OUTPUT=firefox firefox"

#pcm.firefox {
#    type            softvol
#    slave.pcm       "asymed"
#    control.name    "Firefox"
#    control.card    0
#}
#
#pcm.chromium {
#    type            softvol
#    slave.pcm       "asymed"
#    control.name    "Chromium"
#    control.card    0
#}
#
#pcm.!default {
#    type            plug
#    slave.pcm { @func getenv vars [ ALSA_OUTPUT ] default "asymed" }
#}
#
#pcm.asymed {
#    type asym
#    playback.pcm "dmix"
#    capture.pcm "hw:0,0"
#}
#
#pcm.sndio {
#  type file
#  slave.pcm "null"
#  file "|aucat -i -"
#  format "raw"
#}
#
#defaults.bluealsa {
#  interface "hci0"
#  #device "<mac>"
#  profile "a2dp"
#}
