snippet in
	#include <${1:iostream}>${2}
# Read File Into Vector
snippet readfile
	std::vector<char> v;
	if (FILE *${2:fp} = fopen(${1:"filename"}, "r")) {
		char buf[1024];
		while (size_t len = fread(buf, 1, sizeof(buf), $2))
			v.insert(v.end(), buf, buf + len);
		fclose($2);
	}${3}
# std::map
snippet map
	std::map<${1:key}, ${2:value}> map${3};
# std::vector
snippet vector
	std::vector<${1:char}> v${2};
# Namespace
snippet namespace
	namespace ${1:`Filename('', 'my')`} {
		${2}
	} /* $1 */
# Class
snippet class
	class ${1:`Filename('$1_t', 'name')`}
	{
		public:
			$1(${2:arguments});
			virtual ~$1();
		
		private:
			${3:/* data */}
	};
snippet for(
	for(std::vector<${1:type}>::iterator ${2:it} = ${3:vec}.begin();
			$2 != $3.end();
			++$2){
		(*$2).${4:dosomething()};
	}
